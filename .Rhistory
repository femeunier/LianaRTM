geom_point(aes(x = largeliana.density, y = albedo.NIR, color = (lai.liana/lai.tot))) +
theme_bw()
ggplot(data = df.patch.all) +
geom_point(aes(x = lai.liana, y = albedo.NIR, color = (lai.liana/lai.tot))) +
theme_bw()
ggplot(data = df.patch.all) +
geom_point(aes(x = lai.liana, y = albedo.NIR,)) +
theme_bw()
source('/home/femeunier/Documents/projects/LianaRTM/scripts/Example4.R')
df.patch.all <- df.patch %>% group_by(patch) %>% summarise(lai.tot = sum(lai),
BA.liana = BA[is_liana],
lai.liana = lai[is_liana],
liana.density = density[is_liana],
largeliana.density = large.density[is_liana],
albedo = mean(albedo),
albedo.par = mean(albedo.par),
albedo.greenpeak = mean(albedo.greenpeak),
albedo.NIR = mean(albedo.NIR),
understorey.light = mean(understorey.light))
ggplot(data = df.patch.all) +
geom_point(aes(x = lai.liana, y = albedo.NIR)) +
theme_bw()
ggplot(data = df.patch.all) +
geom_point(aes(x = lai.liana/lai.tot, y = albedo.NIR)) +
theme_bw()
ggplot(data = df.patch.all) +
geom_point(aes(x = largeliana.density, y = albedo.NIR)) +
theme_bw()
ggplot(data = df.patch.all) +
geom_point(aes(x = largeliana.density, y = albedo.greenpeak)) +
theme_bw()
ggplot(data = df.patch.all %>% filter(lai.tot < 3)) +
geom_point(aes(x = largeliana.density, y = albedo.greenpeak)) +
theme_bw()
ggplot(data = df.patch.all %>% filter(lai.tot >= 3.5)) +
geom_point(aes(x = largeliana.density, y = albedo.greenpeak)) +
theme_bw()
ggplot(data = df.patch.all %>% filter(lai.tot >= 3)) +
geom_point(aes(x = largeliana.density, y = albedo.greenpeak)) +
theme_bw()
ggplot(data = df.patch.all %>% filter(lai.tot >= 3.5)) +
geom_point(aes(x = largeliana.density, y = albedo.greenpeak)) +
theme_bw()
ggplot(data = df.patch.all %>% filter(lai.tot > 3)) +
geom_point(aes(x = lai.liana/lai.tot, y = understorey.light, color = (lai.liana))) +
theme_bw()
ggplot(data = df.patch.all %>% filter(lai.tot > 3.5)) +
geom_point(aes(x = lai.liana/lai.tot, y = understorey.light, color = (lai.liana))) +
theme_bw()
ggplot(data = df.patch.all %>% filter(lai.tot > 3.5)) +
geom_point(aes(x = lai.liana, y = understorey.light, color = (lai.liana))) +
theme_bw()
ggplot(data = df.patch.all %>% filter(lai.tot > 4.5)) +
geom_point(aes(x = lai.liana, y = understorey.light, color = (lai.liana))) +
theme_bw()
ggplot(data = df.patch.all %>% filter(lai.tot >= 3.5)) +
geom_point(aes(x = largeliana.density, y = albedo.greenpeak)) +
geom_smooth(span = 0.8, method = lm,formula= ((y) ~ (x)), se=TRUE) +
theme_bw()
ggplot(data = df.patch.all %>% filter(lai.tot >= 3.5),
aes(x = largeliana.density, y = albedo.greenpeak)) +
geom_point() +
geom_smooth(span = 0.8, method = lm,formula= ((y) ~ (x)), se=TRUE) +
theme_bw()
ggplot(data = df.patch.all %>% filter(lai.tot >= 3.5),
aes(x = largeliana.density, y = albedo.greenpeak)) +
geom_point() +
geom_smooth(method = lm,formula= ((y) ~ (x)), se=TRUE) +
theme_bw()
ggplot(data = df.patch.all %>% filter(lai.tot > 4.5)) +
geom_point(aes(x = lai.liana, y = understorey.light, color = (lai.liana))) +
geom_smooth(method = lm,formula= ((y) ~ (x)), se=TRUE) +
theme_bw()
ggplot(data = df.patch.all %>% filter(lai.tot > 4.5),
aes(x = lai.liana, y = understorey.light, color = (lai.liana))) +
geom_point() +
geom_smooth(method = lm,formula= ((y) ~ (x)), se=TRUE) +
theme_bw()
ggplot(data = df.patch.all %>% filter(lai.tot >= 3.5),
aes(x = largeliana.density, y = albedo.greenpeak)) +
geom_point() +
theme_bw()
ggplot(data = df.patch.all %>% filter(lai.tot >= 3.5),
aes(x = largeliana.density, y = albedo.NIR)) +
geom_point() +
theme_bw()
ggplot(data = df.patch.all %>% filter(lai.tot >= 3.5),
aes(x = lai.liana, y = albedo.greenpeak)) +
geom_point() +
theme_bw()
ggplot(data = df.patch.all %>% filter(lai.tot >= 3.5),
aes(x = lai.liana, y = albedo.NIR)) +
geom_point() +
theme_bw()
ggplot(data = df.patch.all %>% filter(lai.tot > 4.5),
aes(x = lai.liana/lai.tot, y = understorey.light, color = (lai.liana))) +
geom_point() +
geom_smooth(method = lm,formula= ((y) ~ (x)), se=TRUE) +
theme_bw()
ggplot(data = df.patch.all %>% filter(lai.tot >= 3.5),
aes(x = lai.liana/lai.tot, y = albedo.NIR)) +
geom_point() +
theme_bw()
ggplot(data = df.patch.all %>% filter(lai.tot >= 3.5),
aes(x = lai.liana, y = albedo.NIR)) +
geom_point() +
theme_bw()
ggplot(data = df.patch.all %>% filter(lai.tot >= 3.5),
aes(x = largeliana.density, y = albedo.NIR)) +
geom_point() +
theme_bw()
ggplot(data = df.patch.all %>% filter(lai.tot > 3.5),
aes(x = lai.liana/lai.tot, y = understorey.light, color = (lai.liana))) +
geom_point() +
geom_smooth(method = lm,formula= ((y) ~ (x)), se=TRUE) +
theme_bw()
ggplot(data = df.patch.all %>% filter(lai.tot > 3.5),
aes(x = lai.liana, y = understorey.light, color = (lai.liana))) +
geom_point() +
geom_smooth(method = lm,formula= ((y) ~ (x)), se=TRUE) +
theme_bw()
edr_r_outputs_trees[[target.patch]] <-
with(BCI.data.patch.arranged.merged %>% mutate(pft = 2),
edr_r(pft = pft, lai = lai, wai = wai, cai = cai,
N = N, Cab = Cab, Car = Car, Cw = Cw, Cm = Cm,
orient_factor = orient_factor,
clumping_factor = clumping_factor,
soil_moisture = soil_brightness,
direct_sky_frac = direct_sky_frac,
czen = czen))
edr_r_outputs_trees <- list()
edr_r_outputs_trees[[target.patch]] <-
with(BCI.data.patch.arranged.merged %>% mutate(pft = 2),
edr_r(pft = pft, lai = lai, wai = wai, cai = cai,
N = N, Cab = Cab, Car = Car, Cw = Cw, Cm = Cm,
orient_factor = orient_factor,
clumping_factor = clumping_factor,
soil_moisture = soil_brightness,
direct_sky_frac = direct_sky_frac,
czen = czen))
plot(edr_r_outputs_trees[[target.patch]][["albedo"]])
plot(edr_r_outputs_trees[[target.patch]][["albedo"]],type = 'l')
lines(edr_r_outputs[[target.patch]][["albedo"]],type = 'l',col = 'red')
BCI.data.patch.arranged <- BCI.data.patch %>% arrange(desc(H)) # Tallest cohort must be last in sw_two_stream
BCI.data.patch.arranged.merged <- merge_cohorts(BCI.data.patch.arranged)
edr_r_outputs[[target.patch]] <-
with(BCI.data.patch.arranged.merged,
edr_r(pft = pft, lai = lai, wai = wai, cai = cai,
N = N, Cab = Cab, Car = Car, Cw = Cw, Cm = Cm,
orient_factor = orient_factor,
clumping_factor = clumping_factor,
soil_moisture = soil_brightness,
direct_sky_frac = direct_sky_frac,
czen = czen))
edr_r_outputs_trees[[target.patch]] <-
with(BCI.data.patch.arranged.merged %>% mutate(pft = 2),
edr_r(pft = pft, lai = lai, wai = wai, cai = cai,
N = N, Cab = Cab, Car = Car, Cw = Cw, Cm = Cm,
orient_factor = orient_factor,
clumping_factor = clumping_factor,
soil_moisture = soil_brightness,
direct_sky_frac = direct_sky_frac,
czen = czen))
plot(edr_r_outputs_trees[[target.patch]][["albedo"]],type = 'l')
lines(edr_r_outputs[[target.patch]][["albedo"]],type = 'l',col = 'red')
BCI.data.patch.arranged <- BCI.data.patch %>% arrange((H)) # Tallest cohort must be last in sw_two_stream
BCI.data.patch.arranged.merged <- merge_cohorts(BCI.data.patch.arranged)
edr_r_outputs[[target.patch]] <-
with(BCI.data.patch.arranged.merged,
edr_r(pft = pft, lai = lai, wai = wai, cai = cai,
N = N, Cab = Cab, Car = Car, Cw = Cw, Cm = Cm,
orient_factor = orient_factor,
clumping_factor = clumping_factor,
soil_moisture = soil_brightness,
direct_sky_frac = direct_sky_frac,
czen = czen))
edr_r_outputs_trees[[target.patch]] <-
with(BCI.data.patch.arranged.merged %>% mutate(pft = 2),
edr_r(pft = pft, lai = lai, wai = wai, cai = cai,
N = N, Cab = Cab, Car = Car, Cw = Cw, Cm = Cm,
orient_factor = orient_factor,
clumping_factor = clumping_factor,
soil_moisture = soil_brightness,
direct_sky_frac = direct_sky_frac,
czen = czen))
source('/home/femeunier/Documents/projects/LianaRTM/scripts/Example4.R')
ls.B1 <- readGDAL("/home/femeunier/Downloads/LE07_L2SP_012054_20071220_20200913_02_T1_ST_QA.TIF")
library(rgdal)
library(raster)
library(rgdal)
install.packages("rgdal")
ls.B1 <- readGDAL("/home/femeunier/Downloads/LE07_L2SP_012054_20071220_20200913_02_T1_ST_QA.TIF")
library(rgdal)
library(rgdal)
ls.B1 <- readGDAL("/home/femeunier/Downloads/LE07_L2SP_012054_20071220_20200913_02_T1_ST_QA.TIF")
ls.B1
ls.B1.1 <- raster(ls.B1)
library(raster)
ls.B1.1 <- raster(ls.B1)
plot(ls.B1.1,
main="Near Infrared Band of the Landsat Image")
source('/home/femeunier/Documents/projects/LianaRTM/scripts/Example4.R')
df.patch.all <- df.patch %>% group_by(patch) %>% summarise(lai.tot = sum(lai),
BA.liana = BA[is_liana],
lai.liana = lai[is_liana],
liana.density = density[is_liana],
largeliana.density = large.density[is_liana],
albedo = mean(albedo),
albedo.par = mean(albedo.par),
albedo.greenpeak = mean(albedo.greenpeak),
albedo.NIR = mean(albedo.NIR),
understorey.light = mean(understorey.light),
albedo.tree = mean(albedo.tree),
albedo.par.tree = mean(albedo.par.tree),
albedo.greenpeak.tree = mean(albedo.greenpeak.tree),
albedo.NIR.tree = mean(albedo.NIR.tree),
understorey.light.tree = mean(understorey.light.tree))
ggplot(data = df.patch.all %>% filter(lai.tot >= 3.5),
aes(x = lai.liana, y = albedo.greenpeak)) +
geom_point() +
theme_bw()
ggplot(data = df.patch.all %>% filter(lai.tot >= 3.5),
aes(x = lai.liana, y = albedo.NIR)) +
geom_point() +
theme_bw()
ggplot(data = df.patch.all %>% filter(lai.tot >= 3.5)) +
geom_point(aes(x = lai.liana, y = albedo.NIR),color = "blue") +
geom_point(aes(x = lai.liana, y = albedo.NIR.tree),color = "green") +
theme_bw()
ggplot(data = df.patch.all %>% filter(lai.tot >= 3.5)) +
geom_point(aes(x = lai.liana, y = albedo.NIR - albedo.NIR.tree),color = "blue") +
theme_bw()
ggplot(data = df.patch.all %>% filter(lai.tot >= 3.5)) +
geom_point(aes(x = lai.liana/lai.tot, y = albedo.NIR - albedo.NIR.tree),color = "blue") +
theme_bw()
ggplot(data = df.patch.all %>% filter(lai.tot >= 3.5)) +
geom_point(aes(x = lai.liana/lai.tot, y = albedo.NIR - albedo.NIR.tree)) +
theme_bw()
ggplot(data = df.patch.all %>% filter(lai.tot > 3.5),
aes(x = lai.liana, y = understorey.light, color = (lai.liana))) +
geom_point() +
# geom_smooth(method = lm,formula= ((y) ~ (x)), se=TRUE) +
theme_bw()
ggplot(data = df.patch.all %>% filter(lai.tot > 3.5)) +
geom_point(aes(x = lai.liana,
y = understorey.light - understorey.light.tree)) +
theme_bw()
ggplot(data = df.patch.all %>% filter(lai.tot > 3.5)) +
geom_point(aes(x = lai.liana,
y = (understorey.light - understorey.light.tree)/understorey.light.tree)) +
theme_bw()
ggplot(data = df.patch.all %>% filter(lai.tot > 3.5)) +
geom_point(aes(x = lai.liana/lai.tot,
y = (understorey.light - understorey.light.tree)/understorey.light.tree)) +
theme_bw()
ggplot(data = df.patch.all %>% filter(lai.tot > 3.5)) +
geom_point(aes(x = lai.liana,
y = (understorey.light - understorey.light.tree)/understorey.light.tree)) +
theme_bw()
ggplot(data = df.patch.all %>% filter(lai.tot >= 3.5)) +
geom_point(aes(x = lai.liana/lai.tot, y = (albedo.NIR - albedo.NIR.tree)/albedo.NIR.tree)) +
theme_bw()
ggplot(data = df.patch.all %>% filter(lai.tot >= 3.5)) +
geom_point(aes(x = lai.liana/lai.tot, y = (albedo.NIR - albedo.NIR.tree))) +
theme_bw()
ggplot(data = df.patch.all) +
geom_point(aes(x = lai.liana,
y = (understorey.light - understorey.light.tree)/understorey.light.tree)) +
theme_bw()
ggplot(data = df.patch.all,
aes(x = lai.liana, y = understorey.light, color = (lai.liana))) +
geom_point() +
# geom_smooth(method = lm,formula= ((y) ~ (x)), se=TRUE) +
theme_bw()
ggplot(data = df.patch.all %>% filter(lai.tot > 3.5),
aes(x = lai.liana, y = understorey.light, color = (lai.liana))) +
geom_point() +
# geom_smooth(method = lm,formula= ((y) ~ (x)), se=TRUE) +
theme_bw()
source('/home/femeunier/Documents/projects/LianaRTM/scripts/Example4.R')
df.patch.all <- df.patch %>% group_by(patch) %>% summarise(lai.tot = sum(lai),
BA.liana = BA[is_liana],
lai.liana = lai[is_liana],
liana.density = density[is_liana],
largeliana.density = large.density[is_liana],
albedo = mean(albedo),
albedo.par = mean(albedo.par),
albedo.greenpeak = mean(albedo.greenpeak),
albedo.NIR = mean(albedo.NIR),
understorey.light = mean(understorey.light),
albedo.tree = mean(albedo.tree),
albedo.par.tree = mean(albedo.par.tree),
albedo.greenpeak.tree = mean(albedo.greenpeak.tree),
albedo.NIR.tree = mean(albedo.NIR.tree),
understorey.light.tree = mean(understorey.light.tree))
ggplot(data = df.patch.all %>% filter(lai.tot >= 3.5),
aes(x = lai.liana, y = albedo.greenpeak)) +
geom_point() +
theme_bw()
ggplot(data = df.patch.all %>% filter(lai.tot >= 3.5),
aes(x = lai.liana, y = albedo.NIR)) +
geom_point() +
theme_bw()
ggplot(data = df.patch.all %>% filter(lai.tot >= 3.5)) +
geom_point(aes(x = lai.liana/lai.tot, y = (albedo.NIR - albedo.NIR.tree))) +
theme_bw()
ggplot(data = df.patch.all %>% filter(lai.tot > 3.5),
aes(x = lai.liana, y = understorey.light, color = (lai.liana))) +
geom_point() +
# geom_smooth(method = lm,formula= ((y) ~ (x)), se=TRUE) +
theme_bw()
ggplot(data = df.patch.all) +
geom_point(aes(x = lai.liana,
y = (understorey.light - understorey.light.tree)/understorey.light.tree)) +
theme_bw()
ggplot(data = df.patch.all) +
geom_point(aes(x = lai.liana/lai.tot,
y = (understorey.light - understorey.light.tree)/understorey.light.tree)) +
theme_bw()
ggplot(data = df.patch.all) +
geom_point(aes(x = lai.liana,
y = (understorey.light - understorey.light.tree))) +
theme_bw()
ggplot(data = df.patch.all) +
geom_point(aes(x = lai.liana/lai.tot,
y = (understorey.light - understorey.light.tree))) +
theme_bw()
ggplot(data = df.patch.all) +
geom_point(aes(x = lai.liana,
y = (understorey.light - understorey.light.tree)/understorey.light.tree)) +
theme_bw()
rm(list = ls())
library(LianaRTM)
library(rrtm)
library(dplyr)
library(ggplot2)
head(BCI.data)
# Parameters
dbh_min = c(Liana = 3.)
href = c(Liana = 61.7, Tree = 56.5)
b1Ht = c(Liana = 0.1, Tree = 0.011)
b2Ht = c(Liana = 0.87, Tree = 0.64)
Delta_H = 0.5
BCI.data <- BCI.data %>% mutate(GF = case_when(is_liana ~ "Liana",
!is_liana ~ "Tree"))
BCI.data <- BCI.data %>% mutate(H = href[GF]*(1 -exp(-b1Ht[GF]*((10*dbh)**b2Ht[GF])))) %>%
mutate(H = case_when(((is_liana) & dbh > dbh_min["Liana"]) ~ Delta_H + max(H[!(is_liana)],na.rm = TRUE),
((is_liana) & dbh <= dbh_min["Liana"]) ~ pmin(Delta_H + max(H[!(is_liana)],na.rm = TRUE),
href[GF]*(1 -exp(-b1Ht[GF]*(dbh**b2Ht[GF])))),
TRUE ~ H),
Bl = b1Bl[GF]*(dbh**b2Bl[GF]),
lai = SLA[GF]*Bl/(Delta_xy*Delta_xy),
wai = 0,
cai = 1,
pft = case_when(is_liana ~ 1,
!is_liana ~ 2))
# LAI parameters
b1Bl = c(Liana = 0.049, Tree = 0.02)
b2Bl = c(Liana = 1.89, Tree = 1.85)
SLA = c(Liana = 1/0.064, Tree = 1/0.087)
BCI.data <- BCI.data %>% mutate(GF = case_when(is_liana ~ "Liana",
!is_liana ~ "Tree"))
BCI.data <- BCI.data %>% mutate(H = href[GF]*(1 -exp(-b1Ht[GF]*((10*dbh)**b2Ht[GF])))) %>%
mutate(H = case_when(((is_liana) & dbh > dbh_min["Liana"]) ~ Delta_H + max(H[!(is_liana)],na.rm = TRUE),
((is_liana) & dbh <= dbh_min["Liana"]) ~ pmin(Delta_H + max(H[!(is_liana)],na.rm = TRUE),
href[GF]*(1 -exp(-b1Ht[GF]*(dbh**b2Ht[GF])))),
TRUE ~ H),
Bl = b1Bl[GF]*(dbh**b2Bl[GF]),
lai = SLA[GF]*Bl/(Delta_xy*Delta_xy),
wai = 0,
cai = 1,
pft = case_when(is_liana ~ 1,
!is_liana ~ 2))
patches <- sort(unique(BCI.data$patch))
Delta_xy = sqrt(50*100*100/length(patches))
BCI.data <- BCI.data %>% mutate(GF = case_when(is_liana ~ "Liana",
!is_liana ~ "Tree"))
BCI.data <- BCI.data %>% mutate(H = href[GF]*(1 -exp(-b1Ht[GF]*((10*dbh)**b2Ht[GF])))) %>%
mutate(H = case_when(((is_liana) & dbh > dbh_min["Liana"]) ~ Delta_H + max(H[!(is_liana)],na.rm = TRUE),
((is_liana) & dbh <= dbh_min["Liana"]) ~ pmin(Delta_H + max(H[!(is_liana)],na.rm = TRUE),
href[GF]*(1 -exp(-b1Ht[GF]*(dbh**b2Ht[GF])))),
TRUE ~ H),
Bl = b1Bl[GF]*(dbh**b2Bl[GF]),
lai = SLA[GF]*Bl/(Delta_xy*Delta_xy),
wai = 0,
cai = 1,
pft = case_when(is_liana ~ 1,
!is_liana ~ 2))
BCI.data
ggplot(data = BCI.data %> filter(!is_liana, H > 25)) +
geom_point(aes(x = gx, y = gy)) +
scale_x_continuous(expand = c(0,0),minor_breaks = seq(0,1000,20),breaks = seq(0,1000,200)) +
scale_y_continuous(expand = c(0,0),minor_breaks = seq(0,500,20),breaks = seq(0,500,100)) +
labs(x = "",y = "") +
theme_bw() +
theme(panel.grid.minor.x = element_line(size=0.5),
panel.grid.major.x =  element_line(size=0.5),
panel.grid.major.y = element_line(size=0.5),
panel.grid.minor.y = element_line(size=0.5))
ggplot(data = BCI.data %> filter(!is_liana, H > 25)) +
geom_point(aes(x = gx, y = gy))
head(BCI.data)
unique(BCI.data$census.time)
ggplot(data = BCI.data %> filter(!is_liana, H > 25),
aes(x = gx, y = gy)) +
geom_point()
ggplot(data = BCI.data %> filter(!is_liana, H > 25),
aes(x = gx, y = gy))
ggplot(data = BCI.data,
aes(x = gx, y = gy)) +
geom_point()
ggplot(data = BCI.data %>% filter(!is_liana, H > 25),
aes(x = gx, y = gy)) +
geom_point() +
scale_x_continuous(expand = c(0,0),minor_breaks = seq(0,1000,20),breaks = seq(0,1000,200)) +
scale_y_continuous(expand = c(0,0),minor_breaks = seq(0,500,20),breaks = seq(0,500,100)) +
labs(x = "",y = "") +
theme_bw() +
theme(panel.grid.minor.x = element_line(size=0.5),
panel.grid.major.x =  element_line(size=0.5),
panel.grid.major.y = element_line(size=0.5),
panel.grid.minor.y = element_line(size=0.5))
BCI.data$dbh
hist(BCI.data$dbh)
ggplot(data = BCI.data %>% filter(!is_liana, dbh > 100),
aes(x = gx, y = gy)) +
geom_point() +
scale_x_continuous(expand = c(0,0),minor_breaks = seq(0,1000,20),breaks = seq(0,1000,200)) +
scale_y_continuous(expand = c(0,0),minor_breaks = seq(0,500,20),breaks = seq(0,500,100)) +
labs(x = "",y = "") +
theme_bw() +
theme(panel.grid.minor.x = element_line(size=0.5),
panel.grid.major.x =  element_line(size=0.5),
panel.grid.major.y = element_line(size=0.5),
panel.grid.minor.y = element_line(size=0.5))
ggplot(data = BCI.data %>% filter(!is_liana, dbh > 80),
aes(x = gx, y = gy)) +
geom_point() +
scale_x_continuous(expand = c(0,0),minor_breaks = seq(0,1000,20),breaks = seq(0,1000,200)) +
scale_y_continuous(expand = c(0,0),minor_breaks = seq(0,500,20),breaks = seq(0,500,100)) +
labs(x = "",y = "") +
theme_bw() +
theme(panel.grid.minor.x = element_line(size=0.5),
panel.grid.major.x =  element_line(size=0.5),
panel.grid.major.y = element_line(size=0.5),
panel.grid.minor.y = element_line(size=0.5))
ggplot(data = BCI.data %>% filter(!is_liana, dbh > 70),
aes(x = gx, y = gy)) +
geom_point() +
scale_x_continuous(expand = c(0,0),minor_breaks = seq(0,1000,20),breaks = seq(0,1000,200)) +
scale_y_continuous(expand = c(0,0),minor_breaks = seq(0,500,20),breaks = seq(0,500,100)) +
labs(x = "",y = "") +
theme_bw() +
theme(panel.grid.minor.x = element_line(size=0.5),
panel.grid.major.x =  element_line(size=0.5),
panel.grid.major.y = element_line(size=0.5),
panel.grid.minor.y = element_line(size=0.5))
ggplot(data = BCI.data %>% filter(!is_liana, dbh > 50),
aes(x = gx, y = gy)) +
geom_point() +
scale_x_continuous(expand = c(0,0),minor_breaks = seq(0,1000,20),breaks = seq(0,1000,200)) +
scale_y_continuous(expand = c(0,0),minor_breaks = seq(0,500,20),breaks = seq(0,500,100)) +
labs(x = "",y = "") +
theme_bw() +
theme(panel.grid.minor.x = element_line(size=0.5),
panel.grid.major.x =  element_line(size=0.5),
panel.grid.major.y = element_line(size=0.5),
panel.grid.minor.y = element_line(size=0.5))
ggplot(data = BCI.data %>% filter(!is_liana, dbh > 100),
aes(x = gx, y = gy)) +
geom_point() +
scale_x_continuous(expand = c(0,0),minor_breaks = seq(0,1000,20),breaks = seq(0,1000,200)) +
scale_y_continuous(expand = c(0,0),minor_breaks = seq(0,500,20),breaks = seq(0,500,100)) +
labs(x = "",y = "") +
theme_bw() +
theme(panel.grid.minor.x = element_line(size=0.5),
panel.grid.major.x =  element_line(size=0.5),
panel.grid.major.y = element_line(size=0.5),
panel.grid.minor.y = element_line(size=0.5))
ggplot(data = BCI.data %>% filter(!is_liana, H > 25),
aes(x = gx, y = gy)) +
geom_point() +
scale_x_continuous(expand = c(0,0),minor_breaks = seq(0,1000,20),breaks = seq(0,1000,200)) +
scale_y_continuous(expand = c(0,0),minor_breaks = seq(0,500,20),breaks = seq(0,500,100)) +
labs(x = "",y = "") +
theme_bw() +
theme(panel.grid.minor.x = element_line(size=0.5),
panel.grid.major.x =  element_line(size=0.5),
panel.grid.major.y = element_line(size=0.5),
panel.grid.minor.y = element_line(size=0.5))
ggplot(data = BCI.data %>% filter(!is_liana, H > 25),
aes(x = gx, y = gy)) +
geom_point() +
scale_x_continuous(minor_breaks = seq(0,1000,20),breaks = seq(0,1000,200)) +
scale_y_continuous(minor_breaks = seq(0,500,20),breaks = seq(0,500,100)) +
labs(x = "",y = "") +
theme_bw() +
theme(panel.grid.minor.x = element_line(size=0.5),
panel.grid.major.x =  element_line(size=0.5),
panel.grid.major.y = element_line(size=0.5),
panel.grid.minor.y = element_line(size=0.5))
ggplot(data = BCI.data %>% filter(!is_liana, H > 25),
aes(x = gx, y = gy)) +
geom_point() +
scale_x_continuous(expand = c(0,0),minor_breaks = seq(0,1000,20),breaks = seq(0,1000,200)) +
scale_y_continuous(expand = c(0,0),minor_breaks = seq(0,500,20),breaks = seq(0,500,100)) +
labs(x = "",y = "") +
theme_bw() +
theme(panel.grid.minor.x = element_line(size=0.5),
panel.grid.major.x =  element_line(size=0.5),
panel.grid.major.y = element_line(size=0.5),
panel.grid.minor.y = element_line(size=0.5))
